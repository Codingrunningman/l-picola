{"name":"L-PICOLA","tagline":"Sweet simulations with added caffeine","body":"L-PICOLA is a distributed-memory, **parallel** code for creating **fast**, **accurate**, dark matter simulations. \r\n* **How parallel?** We've used it for simulations with ~68,000,000,000 particles on over 1000 processors without a hitch.\r\n* **How fast?** Due to the algorithms used and the coding, it is ~1000 times faster than an identical full N-Body simulation\r\n* **How accurate?** We can reproduce the two- and three-point clustering of dark matter to within 5% on all scales used for current BAO and RSD measurements.\r\n\r\nThe code itself is written in C and uses MPI for the parallelisation, and includes loads of features that should be useful for current and next-gen large scale structure surveys. One we're really proud of (so much so that we put it in the name) is the ability to generate lightcone simulations _during_ runtime, without using any extra memory and with minimal cost to computational time. This means that L-PICOLA simulations can have clustering that changes as a function of the distance of the observer. This is much more realistic than the simple snaphots used for current surveys.\r\n\r\nOn top of this we can replicate the box at runtime to cover the full redshift range, whilst still keeping a good simulation resolution and include primordial non_Gaussianity in the initial conditions. Full details of the code and it's capabilities can be found in Howlett et. al. (in prep.)\r\n\r\nThe code has already been used to generate mock galaxy catalogues for the SDSS-II Main Galaxy Sample. You can find out more about this in the papers [Ross et. al., 2015](http://arxiv.org/abs/1409.3242) and [Howlett et. al., 2015](http://arxiv.org/abs/1409.3238). We are also using it to generate a set of highly detailed lightcone mocks for the Dark Energy Survey. We hope it finds many more uses.\r\n\r\nYou can download the source code using the links up the top. Furthermore, the code is still under active development if you feel like getting your hands dirty, just fork the code using the GitHub link.\r\n\r\n# Basic Usage\r\nWe have included a detailed User Guide with the source code. You should find all the information on the different options within, and inputs required, by the code.  As a basic example, you'll first need the [MPI](http://www.open-mpi.org/), [FFTW-3](http://www.fftw.org/) and [GSL](http://www.gnu.org/software/gsl/) libraries installed.\r\n\r\nThen you'll need to specify the filepaths for these is the Makefile included with the code. If you've done this correctly, typing `Make` from the directory containing the Makefile and source files should compile the code. \r\n\r\nTo run the code, you can then type:\r\n`mpirun -np 8 L-PICOLA file/run_parameters.dat` \r\nThis will run the example included with the distribution on 8 processors. \r\n\r\n# Contributors\r\nCullan Howlett (ICG, Portsmouth)\r\nMarc Manera (UCL, London)\r\nWill Percival (ICG, Portsmouth)\r\n\r\n# Version   \r\n## 1.0.0 (04-Mar-2015)\r\nInitial Release\r\n\r\n# License\r\nThe code is distributed under the GNU General Public License v2.0. You should get a copy of this when you download the code. This means that you can (and should :) ) modify and distribute the code in any manner you see fit. This also means, however that we, the original creators, provide no warranty or guarantee with the code. All we ask is that you let us know of any problems you have with the code, so we can try to come up with a fix, and that if you use the code for your research, would you please cite the code paper referenced above (Howlett et. al., (in prep.))\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}